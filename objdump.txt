
ccalc:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400238 <.interp>:
  400238:	2f                   	(bad)  
  400239:	6c                   	ins    BYTE PTR es:[rdi],dx
  40023a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400241:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  400246:	78 2d                	js     400275 <_init-0x35b>
  400248:	78 38                	js     400282 <_init-0x34e>
  40024a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
  400250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400251:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

0000000000400254 <.note.ABI-tag>:
  400254:	04 00                	add    al,0x0
  400256:	00 00                	add    BYTE PTR [rax],al
  400258:	10 00                	adc    BYTE PTR [rax],al
  40025a:	00 00                	add    BYTE PTR [rax],al
  40025c:	01 00                	add    DWORD PTR [rax],eax
  40025e:	00 00                	add    BYTE PTR [rax],al
  400260:	47                   	rex.RXB
  400261:	4e 55                	rex.WRX push rbp
  400263:	00 00                	add    BYTE PTR [rax],al
  400265:	00 00                	add    BYTE PTR [rax],al
  400267:	00 02                	add    BYTE PTR [rdx],al
  400269:	00 00                	add    BYTE PTR [rax],al
  40026b:	00 06                	add    BYTE PTR [rsi],al
  40026d:	00 00                	add    BYTE PTR [rax],al
  40026f:	00 20                	add    BYTE PTR [rax],ah
  400271:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000400274 <.note.gnu.build-id>:
  400274:	04 00                	add    al,0x0
  400276:	00 00                	add    BYTE PTR [rax],al
  400278:	14 00                	adc    al,0x0
  40027a:	00 00                	add    BYTE PTR [rax],al
  40027c:	03 00                	add    eax,DWORD PTR [rax]
  40027e:	00 00                	add    BYTE PTR [rax],al
  400280:	47                   	rex.RXB
  400281:	4e 55                	rex.WRX push rbp
  400283:	00 f1                	add    cl,dh
  400285:	a2 0f d4 c1 e2 16 46 	movabs ds:0x17ea4616e2c1d40f,al
  40028c:	ea 17 
  40028e:	d3 3e                	sar    DWORD PTR [rsi],cl
  400290:	26 81 19 e9 51 9f 72 	sbb    DWORD PTR es:[rcx],0x729f51e9
  400297:	49                   	rex.WB

Disassembly of section .gnu.hash:

0000000000400298 <.gnu.hash>:
  400298:	01 00                	add    DWORD PTR [rax],eax
  40029a:	00 00                	add    BYTE PTR [rax],al
  40029c:	01 00                	add    DWORD PTR [rax],eax
  40029e:	00 00                	add    BYTE PTR [rax],al
  4002a0:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

00000000004002b8 <.dynsym>:
	...
  4002d0:	64 00 00             	add    BYTE PTR fs:[rax],al
  4002d3:	00 12                	add    BYTE PTR [rdx],dl
	...
  4002e5:	00 00                	add    BYTE PTR [rax],al
  4002e7:	00 0b                	add    BYTE PTR [rbx],cl
  4002e9:	00 00                	add    BYTE PTR [rax],al
  4002eb:	00 12                	add    BYTE PTR [rdx],dl
	...
  4002fd:	00 00                	add    BYTE PTR [rax],al
  4002ff:	00 2f                	add    BYTE PTR [rdi],ch
  400301:	00 00                	add    BYTE PTR [rax],al
  400303:	00 12                	add    BYTE PTR [rdx],dl
	...
  400315:	00 00                	add    BYTE PTR [rax],al
  400317:	00 36                	add    BYTE PTR [rsi],dh
  400319:	00 00                	add    BYTE PTR [rax],al
  40031b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40032d:	00 00                	add    BYTE PTR [rax],al
  40032f:	00 10                	add    BYTE PTR [rax],dl
  400331:	00 00                	add    BYTE PTR [rax],al
  400333:	00 12                	add    BYTE PTR [rdx],dl
	...
  400345:	00 00                	add    BYTE PTR [rax],al
  400347:	00 28                	add    BYTE PTR [rax],ch
  400349:	00 00                	add    BYTE PTR [rax],al
  40034b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40035d:	00 00                	add    BYTE PTR [rax],al
  40035f:	00 52 00             	add    BYTE PTR [rdx+0x0],dl
  400362:	00 00                	add    BYTE PTR [rax],al
  400364:	12 00                	adc    al,BYTE PTR [rax]
	...
  400376:	00 00                	add    BYTE PTR [rax],al
  400378:	69 00 00 00 20 00    	imul   eax,DWORD PTR [rax],0x200000
	...
  40038e:	00 00                	add    BYTE PTR [rax],al
  400390:	3d 00 00 00 12       	cmp    eax,0x12000000
	...
  4003a5:	00 00                	add    BYTE PTR [rax],al
  4003a7:	00 21                	add    BYTE PTR [rcx],ah
  4003a9:	00 00                	add    BYTE PTR [rax],al
  4003ab:	00 12                	add    BYTE PTR [rdx],dl
	...
  4003bd:	00 00                	add    BYTE PTR [rax],al
  4003bf:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
  4003c3:	00 12                	add    BYTE PTR [rdx],dl
	...

Disassembly of section .dynstr:

00000000004003d8 <.dynstr>:
  4003d8:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4003dc:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  4003de:	73 6f                	jae    40044f <_init-0x181>
  4003e0:	2e 36 00 70 75       	cs add BYTE PTR ss:[rax+0x75],dh
  4003e5:	74 73                	je     40045a <_init-0x176>
  4003e7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  4003ea:	73 74                	jae    400460 <_init-0x170>
  4003ec:	61                   	(bad)  
  4003ed:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  4003f0:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
  4003f3:	5f                   	pop    rdi
  4003f4:	66 61                	data16 (bad) 
  4003f6:	69 6c 00 73 74 72 64 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x75647274
  4003fd:	75 
  4003fe:	70 00                	jo     400400 <_init-0x1d0>
  400400:	70 72                	jo     400474 <_init-0x15c>
  400402:	69 6e 74 66 00 73 74 	imul   ebp,DWORD PTR [rsi+0x74],0x74730066
  400409:	72 74                	jb     40047f <_init-0x151>
  40040b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40040c:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
  400410:	72 6c                	jb     40047e <_init-0x152>
  400412:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  400414:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
  400417:	6c                   	ins    BYTE PTR es:[rdi],dx
  400418:	6c                   	ins    BYTE PTR es:[rdi],dx
  400419:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  40041a:	63 00                	movsxd eax,DWORD PTR [rax]
  40041c:	5f                   	pop    rdi
  40041d:	5f                   	pop    rdi
  40041e:	63 74 79 70          	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
  400422:	65 5f                	gs pop rdi
  400424:	62                   	(bad)  
  400425:	5f                   	pop    rdi
  400426:	6c                   	ins    BYTE PTR es:[rdi],dx
  400427:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400428:	63 00                	movsxd eax,DWORD PTR [rax]
  40042a:	5f                   	pop    rdi
  40042b:	5f                   	pop    rdi
  40042c:	6c                   	ins    BYTE PTR es:[rdi],dx
  40042d:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  400434:	72 74                	jb     4004aa <_init-0x126>
  400436:	5f                   	pop    rdi
  400437:	6d                   	ins    DWORD PTR es:[rdi],dx
  400438:	61                   	(bad)  
  400439:	69 6e 00 66 72 65 65 	imul   ebp,DWORD PTR [rsi+0x0],0x65657266
  400440:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  400443:	67 6d                	ins    DWORD PTR es:[edi],dx
  400445:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400446:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400447:	5f                   	pop    rdi
  400448:	73 74                	jae    4004be <_init-0x112>
  40044a:	61                   	(bad)  
  40044b:	72 74                	jb     4004c1 <_init-0x10f>
  40044d:	5f                   	pop    rdi
  40044e:	5f                   	pop    rdi
  40044f:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
  400452:	49                   	rex.WB
  400453:	42                   	rex.X
  400454:	43 5f                	rex.XB pop r15
  400456:	32 2e                	xor    ch,BYTE PTR [rsi]
  400458:	33 00                	xor    eax,DWORD PTR [rax]
  40045a:	47                   	rex.RXB
  40045b:	4c                   	rex.WR
  40045c:	49                   	rex.WB
  40045d:	42                   	rex.X
  40045e:	43 5f                	rex.XB pop r15
  400460:	32 2e                	xor    ch,BYTE PTR [rsi]
  400462:	34 00                	xor    al,0x0
  400464:	47                   	rex.RXB
  400465:	4c                   	rex.WR
  400466:	49                   	rex.WB
  400467:	42                   	rex.X
  400468:	43 5f                	rex.XB pop r15
  40046a:	32 2e                	xor    ch,BYTE PTR [rsi]
  40046c:	32 2e                	xor    ch,BYTE PTR [rsi]
  40046e:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400470 <.gnu.version>:
  400470:	00 00                	add    BYTE PTR [rax],al
  400472:	02 00                	add    al,BYTE PTR [rax]
  400474:	02 00                	add    al,BYTE PTR [rax]
  400476:	02 00                	add    al,BYTE PTR [rax]
  400478:	02 00                	add    al,BYTE PTR [rax]
  40047a:	03 00                	add    eax,DWORD PTR [rax]
  40047c:	02 00                	add    al,BYTE PTR [rax]
  40047e:	02 00                	add    al,BYTE PTR [rax]
  400480:	00 00                	add    BYTE PTR [rax],al
  400482:	02 00                	add    al,BYTE PTR [rax]
  400484:	02 00                	add    al,BYTE PTR [rax]
  400486:	04 00                	add    al,0x0

Disassembly of section .gnu.version_r:

0000000000400488 <.gnu.version_r>:
  400488:	01 00                	add    DWORD PTR [rax],eax
  40048a:	03 00                	add    eax,DWORD PTR [rax]
  40048c:	01 00                	add    DWORD PTR [rax],eax
  40048e:	00 00                	add    BYTE PTR [rax],al
  400490:	10 00                	adc    BYTE PTR [rax],al
  400492:	00 00                	add    BYTE PTR [rax],al
  400494:	00 00                	add    BYTE PTR [rax],al
  400496:	00 00                	add    BYTE PTR [rax],al
  400498:	13 69 69             	adc    ebp,DWORD PTR [rcx+0x69]
  40049b:	0d 00 00 04 00       	or     eax,0x40000
  4004a0:	78 00                	js     4004a2 <_init-0x12e>
  4004a2:	00 00                	add    BYTE PTR [rax],al
  4004a4:	10 00                	adc    BYTE PTR [rax],al
  4004a6:	00 00                	add    BYTE PTR [rax],al
  4004a8:	14 69                	adc    al,0x69
  4004aa:	69 0d 00 00 03 00 82 	imul   ecx,DWORD PTR [rip+0x30000],0x82        # 4304b4 <__FRAME_END__+0x2ef2c>
  4004b1:	00 00 00 
  4004b4:	10 00                	adc    BYTE PTR [rax],al
  4004b6:	00 00                	add    BYTE PTR [rax],al
  4004b8:	75 1a                	jne    4004d4 <_init-0xfc>
  4004ba:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  4004c0:	8c 00                	mov    WORD PTR [rax],es
  4004c2:	00 00                	add    BYTE PTR [rax],al
  4004c4:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000004004c8 <.rela.dyn>:
  4004c8:	f8                   	clc    
  4004c9:	1f                   	(bad)  
  4004ca:	60                   	(bad)  
  4004cb:	00 00                	add    BYTE PTR [rax],al
  4004cd:	00 00                	add    BYTE PTR [rax],al
  4004cf:	00 06                	add    BYTE PTR [rsi],al
  4004d1:	00 00                	add    BYTE PTR [rax],al
  4004d3:	00 08                	add    BYTE PTR [rax],cl
	...

Disassembly of section .rela.plt:

00000000004004e0 <.rela.plt>:
  4004e0:	18 20                	sbb    BYTE PTR [rax],ah
  4004e2:	60                   	(bad)  
  4004e3:	00 00                	add    BYTE PTR [rax],al
  4004e5:	00 00                	add    BYTE PTR [rax],al
  4004e7:	00 07                	add    BYTE PTR [rdi],al
  4004e9:	00 00                	add    BYTE PTR [rax],al
  4004eb:	00 01                	add    BYTE PTR [rcx],al
	...
  4004f5:	00 00                	add    BYTE PTR [rax],al
  4004f7:	00 20                	add    BYTE PTR [rax],ah
  4004f9:	20 60 00             	and    BYTE PTR [rax+0x0],ah
  4004fc:	00 00                	add    BYTE PTR [rax],al
  4004fe:	00 00                	add    BYTE PTR [rax],al
  400500:	07                   	(bad)  
  400501:	00 00                	add    BYTE PTR [rax],al
  400503:	00 02                	add    BYTE PTR [rdx],al
	...
  40050d:	00 00                	add    BYTE PTR [rax],al
  40050f:	00 28                	add    BYTE PTR [rax],ch
  400511:	20 60 00             	and    BYTE PTR [rax+0x0],ah
  400514:	00 00                	add    BYTE PTR [rax],al
  400516:	00 00                	add    BYTE PTR [rax],al
  400518:	07                   	(bad)  
  400519:	00 00                	add    BYTE PTR [rax],al
  40051b:	00 03                	add    BYTE PTR [rbx],al
	...
  400525:	00 00                	add    BYTE PTR [rax],al
  400527:	00 30                	add    BYTE PTR [rax],dh
  400529:	20 60 00             	and    BYTE PTR [rax+0x0],ah
  40052c:	00 00                	add    BYTE PTR [rax],al
  40052e:	00 00                	add    BYTE PTR [rax],al
  400530:	07                   	(bad)  
  400531:	00 00                	add    BYTE PTR [rax],al
  400533:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
  40053e:	00 00                	add    BYTE PTR [rax],al
  400540:	38 20                	cmp    BYTE PTR [rax],ah
  400542:	60                   	(bad)  
  400543:	00 00                	add    BYTE PTR [rax],al
  400545:	00 00                	add    BYTE PTR [rax],al
  400547:	00 07                	add    BYTE PTR [rdi],al
  400549:	00 00                	add    BYTE PTR [rax],al
  40054b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 400551 <_init-0x7f>
  400551:	00 00                	add    BYTE PTR [rax],al
  400553:	00 00                	add    BYTE PTR [rax],al
  400555:	00 00                	add    BYTE PTR [rax],al
  400557:	00 40 20             	add    BYTE PTR [rax+0x20],al
  40055a:	60                   	(bad)  
  40055b:	00 00                	add    BYTE PTR [rax],al
  40055d:	00 00                	add    BYTE PTR [rax],al
  40055f:	00 07                	add    BYTE PTR [rdi],al
  400561:	00 00                	add    BYTE PTR [rax],al
  400563:	00 06                	add    BYTE PTR [rsi],al
	...
  40056d:	00 00                	add    BYTE PTR [rax],al
  40056f:	00 48 20             	add    BYTE PTR [rax+0x20],cl
  400572:	60                   	(bad)  
  400573:	00 00                	add    BYTE PTR [rax],al
  400575:	00 00                	add    BYTE PTR [rax],al
  400577:	00 07                	add    BYTE PTR [rdi],al
  400579:	00 00                	add    BYTE PTR [rax],al
  40057b:	00 07                	add    BYTE PTR [rdi],al
	...
  400585:	00 00                	add    BYTE PTR [rax],al
  400587:	00 50 20             	add    BYTE PTR [rax+0x20],dl
  40058a:	60                   	(bad)  
  40058b:	00 00                	add    BYTE PTR [rax],al
  40058d:	00 00                	add    BYTE PTR [rax],al
  40058f:	00 07                	add    BYTE PTR [rdi],al
  400591:	00 00                	add    BYTE PTR [rax],al
  400593:	00 09                	add    BYTE PTR [rcx],cl
	...
  40059d:	00 00                	add    BYTE PTR [rax],al
  40059f:	00 58 20             	add    BYTE PTR [rax+0x20],bl
  4005a2:	60                   	(bad)  
  4005a3:	00 00                	add    BYTE PTR [rax],al
  4005a5:	00 00                	add    BYTE PTR [rax],al
  4005a7:	00 07                	add    BYTE PTR [rdi],al
  4005a9:	00 00                	add    BYTE PTR [rax],al
  4005ab:	00 0a                	add    BYTE PTR [rdx],cl
	...
  4005b5:	00 00                	add    BYTE PTR [rax],al
  4005b7:	00 60 20             	add    BYTE PTR [rax+0x20],ah
  4005ba:	60                   	(bad)  
  4005bb:	00 00                	add    BYTE PTR [rax],al
  4005bd:	00 00                	add    BYTE PTR [rax],al
  4005bf:	00 07                	add    BYTE PTR [rdi],al
  4005c1:	00 00                	add    BYTE PTR [rax],al
  4005c3:	00 0b                	add    BYTE PTR [rbx],cl
	...

Disassembly of section .init:

00000000004005d0 <_init>:
  4005d0:	48 83 ec 08          	sub    rsp,0x8
  4005d4:	48 8b 05 1d 1a 20 00 	mov    rax,QWORD PTR [rip+0x201a1d]        # 601ff8 <_DYNAMIC+0x1d0>
  4005db:	48 85 c0             	test   rax,rax
  4005de:	74 05                	je     4005e5 <_init+0x15>
  4005e0:	e8 bb 00 00 00       	call   4006a0 <__ctype_b_loc@plt+0x10>
  4005e5:	48 83 c4 08          	add    rsp,0x8
  4005e9:	c3                   	ret    

Disassembly of section .plt:

00000000004005f0 <free@plt-0x10>:
  4005f0:	ff 35 12 1a 20 00    	push   QWORD PTR [rip+0x201a12]        # 602008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4005f6:	ff 25 14 1a 20 00    	jmp    QWORD PTR [rip+0x201a14]        # 602010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4005fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400600 <free@plt>:
  400600:	ff 25 12 1a 20 00    	jmp    QWORD PTR [rip+0x201a12]        # 602018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400606:	68 00 00 00 00       	push   0x0
  40060b:	e9 e0 ff ff ff       	jmp    4005f0 <_init+0x20>

0000000000400610 <puts@plt>:
  400610:	ff 25 0a 1a 20 00    	jmp    QWORD PTR [rip+0x201a0a]        # 602020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400616:	68 01 00 00 00       	push   0x1
  40061b:	e9 d0 ff ff ff       	jmp    4005f0 <_init+0x20>

0000000000400620 <strtod@plt>:
  400620:	ff 25 02 1a 20 00    	jmp    QWORD PTR [rip+0x201a02]        # 602028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400626:	68 02 00 00 00       	push   0x2
  40062b:	e9 c0 ff ff ff       	jmp    4005f0 <_init+0x20>

0000000000400630 <strlen@plt>:
  400630:	ff 25 fa 19 20 00    	jmp    QWORD PTR [rip+0x2019fa]        # 602030 <_GLOBAL_OFFSET_TABLE_+0x30>
  400636:	68 03 00 00 00       	push   0x3
  40063b:	e9 b0 ff ff ff       	jmp    4005f0 <_init+0x20>

0000000000400640 <__stack_chk_fail@plt>:
  400640:	ff 25 f2 19 20 00    	jmp    QWORD PTR [rip+0x2019f2]        # 602038 <_GLOBAL_OFFSET_TABLE_+0x38>
  400646:	68 04 00 00 00       	push   0x4
  40064b:	e9 a0 ff ff ff       	jmp    4005f0 <_init+0x20>

0000000000400650 <printf@plt>:
  400650:	ff 25 ea 19 20 00    	jmp    QWORD PTR [rip+0x2019ea]        # 602040 <_GLOBAL_OFFSET_TABLE_+0x40>
  400656:	68 05 00 00 00       	push   0x5
  40065b:	e9 90 ff ff ff       	jmp    4005f0 <_init+0x20>

0000000000400660 <__libc_start_main@plt>:
  400660:	ff 25 e2 19 20 00    	jmp    QWORD PTR [rip+0x2019e2]        # 602048 <_GLOBAL_OFFSET_TABLE_+0x48>
  400666:	68 06 00 00 00       	push   0x6
  40066b:	e9 80 ff ff ff       	jmp    4005f0 <_init+0x20>

0000000000400670 <malloc@plt>:
  400670:	ff 25 da 19 20 00    	jmp    QWORD PTR [rip+0x2019da]        # 602050 <_GLOBAL_OFFSET_TABLE_+0x50>
  400676:	68 07 00 00 00       	push   0x7
  40067b:	e9 70 ff ff ff       	jmp    4005f0 <_init+0x20>

0000000000400680 <strdup@plt>:
  400680:	ff 25 d2 19 20 00    	jmp    QWORD PTR [rip+0x2019d2]        # 602058 <_GLOBAL_OFFSET_TABLE_+0x58>
  400686:	68 08 00 00 00       	push   0x8
  40068b:	e9 60 ff ff ff       	jmp    4005f0 <_init+0x20>

0000000000400690 <__ctype_b_loc@plt>:
  400690:	ff 25 ca 19 20 00    	jmp    QWORD PTR [rip+0x2019ca]        # 602060 <_GLOBAL_OFFSET_TABLE_+0x60>
  400696:	68 09 00 00 00       	push   0x9
  40069b:	e9 50 ff ff ff       	jmp    4005f0 <_init+0x20>

Disassembly of section .plt.got:

00000000004006a0 <.plt.got>:
  4006a0:	ff 25 52 19 20 00    	jmp    QWORD PTR [rip+0x201952]        # 601ff8 <_DYNAMIC+0x1d0>
  4006a6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000004006b0 <_start>:
  4006b0:	31 ed                	xor    ebp,ebp
  4006b2:	49 89 d1             	mov    r9,rdx
  4006b5:	5e                   	pop    rsi
  4006b6:	48 89 e2             	mov    rdx,rsp
  4006b9:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  4006bd:	50                   	push   rax
  4006be:	54                   	push   rsp
  4006bf:	49 c7 c0 e0 11 40 00 	mov    r8,0x4011e0
  4006c6:	48 c7 c1 70 11 40 00 	mov    rcx,0x401170
  4006cd:	48 c7 c7 9b 10 40 00 	mov    rdi,0x40109b
  4006d4:	e8 87 ff ff ff       	call   400660 <__libc_start_main@plt>
  4006d9:	f4                   	hlt    
  4006da:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

00000000004006e0 <deregister_tm_clones>:
  4006e0:	b8 7f 20 60 00       	mov    eax,0x60207f
  4006e5:	55                   	push   rbp
  4006e6:	48 2d 78 20 60 00    	sub    rax,0x602078
  4006ec:	48 83 f8 0e          	cmp    rax,0xe
  4006f0:	48 89 e5             	mov    rbp,rsp
  4006f3:	76 1b                	jbe    400710 <deregister_tm_clones+0x30>
  4006f5:	b8 00 00 00 00       	mov    eax,0x0
  4006fa:	48 85 c0             	test   rax,rax
  4006fd:	74 11                	je     400710 <deregister_tm_clones+0x30>
  4006ff:	5d                   	pop    rbp
  400700:	bf 78 20 60 00       	mov    edi,0x602078
  400705:	ff e0                	jmp    rax
  400707:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  40070e:	00 00 
  400710:	5d                   	pop    rbp
  400711:	c3                   	ret    
  400712:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  400716:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  40071d:	00 00 00 

0000000000400720 <register_tm_clones>:
  400720:	be 78 20 60 00       	mov    esi,0x602078
  400725:	55                   	push   rbp
  400726:	48 81 ee 78 20 60 00 	sub    rsi,0x602078
  40072d:	48 c1 fe 03          	sar    rsi,0x3
  400731:	48 89 e5             	mov    rbp,rsp
  400734:	48 89 f0             	mov    rax,rsi
  400737:	48 c1 e8 3f          	shr    rax,0x3f
  40073b:	48 01 c6             	add    rsi,rax
  40073e:	48 d1 fe             	sar    rsi,1
  400741:	74 15                	je     400758 <register_tm_clones+0x38>
  400743:	b8 00 00 00 00       	mov    eax,0x0
  400748:	48 85 c0             	test   rax,rax
  40074b:	74 0b                	je     400758 <register_tm_clones+0x38>
  40074d:	5d                   	pop    rbp
  40074e:	bf 78 20 60 00       	mov    edi,0x602078
  400753:	ff e0                	jmp    rax
  400755:	0f 1f 00             	nop    DWORD PTR [rax]
  400758:	5d                   	pop    rbp
  400759:	c3                   	ret    
  40075a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000400760 <__do_global_dtors_aux>:
  400760:	80 3d 11 19 20 00 00 	cmp    BYTE PTR [rip+0x201911],0x0        # 602078 <__TMC_END__>
  400767:	75 11                	jne    40077a <__do_global_dtors_aux+0x1a>
  400769:	55                   	push   rbp
  40076a:	48 89 e5             	mov    rbp,rsp
  40076d:	e8 6e ff ff ff       	call   4006e0 <deregister_tm_clones>
  400772:	5d                   	pop    rbp
  400773:	c6 05 fe 18 20 00 01 	mov    BYTE PTR [rip+0x2018fe],0x1        # 602078 <__TMC_END__>
  40077a:	f3 c3                	repz ret 
  40077c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400780 <frame_dummy>:
  400780:	bf 20 1e 60 00       	mov    edi,0x601e20
  400785:	48 83 3f 00          	cmp    QWORD PTR [rdi],0x0
  400789:	75 05                	jne    400790 <frame_dummy+0x10>
  40078b:	eb 93                	jmp    400720 <register_tm_clones>
  40078d:	0f 1f 00             	nop    DWORD PTR [rax]
  400790:	b8 00 00 00 00       	mov    eax,0x0
  400795:	48 85 c0             	test   rax,rax
  400798:	74 f1                	je     40078b <frame_dummy+0xb>
  40079a:	55                   	push   rbp
  40079b:	48 89 e5             	mov    rbp,rsp
  40079e:	ff d0                	call   rax
  4007a0:	5d                   	pop    rbp
  4007a1:	e9 7a ff ff ff       	jmp    400720 <register_tm_clones>

00000000004007a6 <create_token>:
  4007a6:	55                   	push   rbp
  4007a7:	48 89 e5             	mov    rbp,rsp
  4007aa:	48 83 ec 20          	sub    rsp,0x20
  4007ae:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
  4007b1:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  4007b5:	bf 10 00 00 00       	mov    edi,0x10
  4007ba:	e8 b1 fe ff ff       	call   400670 <malloc@plt>
  4007bf:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4007c3:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  4007c8:	74 27                	je     4007f1 <create_token+0x4b>
  4007ca:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4007ce:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
  4007d1:	89 10                	mov    DWORD PTR [rax],edx
  4007d3:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  4007d7:	48 89 c7             	mov    rdi,rax
  4007da:	b8 00 00 00 00       	mov    eax,0x0
  4007df:	e8 9c fe ff ff       	call   400680 <strdup@plt>
  4007e4:	48 98                	cdqe   
  4007e6:	48 89 c2             	mov    rdx,rax
  4007e9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4007ed:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
  4007f1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4007f5:	c9                   	leave  
  4007f6:	c3                   	ret    

00000000004007f7 <destroy_token>:
  4007f7:	55                   	push   rbp
  4007f8:	48 89 e5             	mov    rbp,rsp
  4007fb:	48 83 ec 10          	sub    rsp,0x10
  4007ff:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  400803:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400807:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  40080b:	48 89 c7             	mov    rdi,rax
  40080e:	e8 ed fd ff ff       	call   400600 <free@plt>
  400813:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400817:	48 89 c7             	mov    rdi,rax
  40081a:	e8 e1 fd ff ff       	call   400600 <free@plt>
  40081f:	90                   	nop
  400820:	c9                   	leave  
  400821:	c3                   	ret    

0000000000400822 <create_stack>:
  400822:	55                   	push   rbp
  400823:	48 89 e5             	mov    rbp,rsp
  400826:	48 83 ec 10          	sub    rsp,0x10
  40082a:	bf 08 20 00 00       	mov    edi,0x2008
  40082f:	e8 3c fe ff ff       	call   400670 <malloc@plt>
  400834:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  400838:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40083c:	c7 80 00 20 00 00 00 	mov    DWORD PTR [rax+0x2000],0x0
  400843:	00 00 00 
  400846:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40084a:	c9                   	leave  
  40084b:	c3                   	ret    

000000000040084c <is_empty>:
  40084c:	55                   	push   rbp
  40084d:	48 89 e5             	mov    rbp,rsp
  400850:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  400854:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400858:	8b 80 00 20 00 00    	mov    eax,DWORD PTR [rax+0x2000]
  40085e:	85 c0                	test   eax,eax
  400860:	0f 94 c0             	sete   al
  400863:	0f b6 c0             	movzx  eax,al
  400866:	5d                   	pop    rbp
  400867:	c3                   	ret    

0000000000400868 <push>:
  400868:	55                   	push   rbp
  400869:	48 89 e5             	mov    rbp,rsp
  40086c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  400870:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  400874:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400878:	8b 80 00 20 00 00    	mov    eax,DWORD PTR [rax+0x2000]
  40087e:	83 c0 01             	add    eax,0x1
  400881:	3d ff 03 00 00       	cmp    eax,0x3ff
  400886:	7e 07                	jle    40088f <push+0x27>
  400888:	b8 00 00 00 00       	mov    eax,0x0
  40088d:	eb 35                	jmp    4008c4 <push+0x5c>
  40088f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400893:	8b 80 00 20 00 00    	mov    eax,DWORD PTR [rax+0x2000]
  400899:	8d 50 01             	lea    edx,[rax+0x1]
  40089c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4008a0:	89 90 00 20 00 00    	mov    DWORD PTR [rax+0x2000],edx
  4008a6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4008aa:	8b 90 00 20 00 00    	mov    edx,DWORD PTR [rax+0x2000]
  4008b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4008b4:	48 63 d2             	movsxd rdx,edx
  4008b7:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  4008bb:	48 89 0c d0          	mov    QWORD PTR [rax+rdx*8],rcx
  4008bf:	b8 01 00 00 00       	mov    eax,0x1
  4008c4:	5d                   	pop    rbp
  4008c5:	c3                   	ret    

00000000004008c6 <pop>:
  4008c6:	55                   	push   rbp
  4008c7:	48 89 e5             	mov    rbp,rsp
  4008ca:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4008ce:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4008d2:	8b 80 00 20 00 00    	mov    eax,DWORD PTR [rax+0x2000]
  4008d8:	85 c0                	test   eax,eax
  4008da:	79 07                	jns    4008e3 <pop+0x1d>
  4008dc:	b8 00 00 00 00       	mov    eax,0x0
  4008e1:	eb 21                	jmp    400904 <pop+0x3e>
  4008e3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4008e7:	8b 80 00 20 00 00    	mov    eax,DWORD PTR [rax+0x2000]
  4008ed:	8d 48 ff             	lea    ecx,[rax-0x1]
  4008f0:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  4008f4:	89 8a 00 20 00 00    	mov    DWORD PTR [rdx+0x2000],ecx
  4008fa:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  4008fe:	48 98                	cdqe   
  400900:	48 8b 04 c2          	mov    rax,QWORD PTR [rdx+rax*8]
  400904:	5d                   	pop    rbp
  400905:	c3                   	ret    

0000000000400906 <destroy_stack>:
  400906:	55                   	push   rbp
  400907:	48 89 e5             	mov    rbp,rsp
  40090a:	48 83 ec 20          	sub    rsp,0x20
  40090e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  400912:	eb 0c                	jmp    400920 <destroy_stack+0x1a>
  400914:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400918:	48 89 c7             	mov    rdi,rax
  40091b:	e8 d7 fe ff ff       	call   4007f7 <destroy_token>
  400920:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400924:	48 89 c7             	mov    rdi,rax
  400927:	e8 9a ff ff ff       	call   4008c6 <pop>
  40092c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  400930:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  400935:	75 dd                	jne    400914 <destroy_stack+0xe>
  400937:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40093b:	48 89 c7             	mov    rdi,rax
  40093e:	e8 bd fc ff ff       	call   400600 <free@plt>
  400943:	90                   	nop
  400944:	c9                   	leave  
  400945:	c3                   	ret    

0000000000400946 <is_op>:
  400946:	55                   	push   rbp
  400947:	48 89 e5             	mov    rbp,rsp
  40094a:	89 f8                	mov    eax,edi
  40094c:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
  40094f:	80 7d fc 2b          	cmp    BYTE PTR [rbp-0x4],0x2b
  400953:	74 12                	je     400967 <is_op+0x21>
  400955:	80 7d fc 2d          	cmp    BYTE PTR [rbp-0x4],0x2d
  400959:	74 0c                	je     400967 <is_op+0x21>
  40095b:	80 7d fc 2a          	cmp    BYTE PTR [rbp-0x4],0x2a
  40095f:	74 06                	je     400967 <is_op+0x21>
  400961:	80 7d fc 2f          	cmp    BYTE PTR [rbp-0x4],0x2f
  400965:	75 07                	jne    40096e <is_op+0x28>
  400967:	b8 01 00 00 00       	mov    eax,0x1
  40096c:	eb 05                	jmp    400973 <is_op+0x2d>
  40096e:	b8 00 00 00 00       	mov    eax,0x0
  400973:	5d                   	pop    rbp
  400974:	c3                   	ret    

0000000000400975 <next_token>:
  400975:	55                   	push   rbp
  400976:	48 89 e5             	mov    rbp,rsp
  400979:	48 83 ec 70          	sub    rsp,0x70
  40097d:	48 89 7d 98          	mov    QWORD PTR [rbp-0x68],rdi
  400981:	48 89 75 90          	mov    QWORD PTR [rbp-0x70],rsi
  400985:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
  40098c:	00 00 
  40098e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  400992:	31 c0                	xor    eax,eax
  400994:	e9 df 01 00 00       	jmp    400b78 <next_token+0x203>
  400999:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  40099d:	8b 00                	mov    eax,DWORD PTR [rax]
  40099f:	48 63 d0             	movsxd rdx,eax
  4009a2:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
  4009a6:	48 01 d0             	add    rax,rdx
  4009a9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  4009ac:	88 45 a7             	mov    BYTE PTR [rbp-0x59],al
  4009af:	e8 dc fc ff ff       	call   400690 <__ctype_b_loc@plt>
  4009b4:	48 8b 00             	mov    rax,QWORD PTR [rax]
  4009b7:	0f b6 55 a7          	movzx  edx,BYTE PTR [rbp-0x59]
  4009bb:	48 0f be d2          	movsx  rdx,dl
  4009bf:	48 01 d2             	add    rdx,rdx
  4009c2:	48 01 d0             	add    rax,rdx
  4009c5:	0f b7 00             	movzx  eax,WORD PTR [rax]
  4009c8:	0f b7 c0             	movzx  eax,ax
  4009cb:	25 00 20 00 00       	and    eax,0x2000
  4009d0:	85 c0                	test   eax,eax
  4009d2:	74 14                	je     4009e8 <next_token+0x73>
  4009d4:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  4009d8:	8b 00                	mov    eax,DWORD PTR [rax]
  4009da:	8d 50 ff             	lea    edx,[rax-0x1]
  4009dd:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  4009e1:	89 10                	mov    DWORD PTR [rax],edx
  4009e3:	e9 90 01 00 00       	jmp    400b78 <next_token+0x203>
  4009e8:	0f b6 45 a7          	movzx  eax,BYTE PTR [rbp-0x59]
  4009ec:	0f be c0             	movsx  eax,al
  4009ef:	89 c7                	mov    edi,eax
  4009f1:	e8 50 ff ff ff       	call   400946 <is_op>
  4009f6:	85 c0                	test   eax,eax
  4009f8:	74 16                	je     400a10 <next_token+0x9b>
  4009fa:	48 8d 45 a7          	lea    rax,[rbp-0x59]
  4009fe:	48 89 c6             	mov    rsi,rax
  400a01:	bf 01 00 00 00       	mov    edi,0x1
  400a06:	e8 9b fd ff ff       	call   4007a6 <create_token>
  400a0b:	e9 7b 01 00 00       	jmp    400b8b <next_token+0x216>
  400a10:	0f b6 45 a7          	movzx  eax,BYTE PTR [rbp-0x59]
  400a14:	3c 28                	cmp    al,0x28
  400a16:	74 08                	je     400a20 <next_token+0xab>
  400a18:	0f b6 45 a7          	movzx  eax,BYTE PTR [rbp-0x59]
  400a1c:	3c 29                	cmp    al,0x29
  400a1e:	75 16                	jne    400a36 <next_token+0xc1>
  400a20:	48 8d 45 a7          	lea    rax,[rbp-0x59]
  400a24:	48 89 c6             	mov    rsi,rax
  400a27:	bf 02 00 00 00       	mov    edi,0x2
  400a2c:	e8 75 fd ff ff       	call   4007a6 <create_token>
  400a31:	e9 55 01 00 00       	jmp    400b8b <next_token+0x216>
  400a36:	e8 55 fc ff ff       	call   400690 <__ctype_b_loc@plt>
  400a3b:	48 8b 00             	mov    rax,QWORD PTR [rax]
  400a3e:	0f b6 55 a7          	movzx  edx,BYTE PTR [rbp-0x59]
  400a42:	48 0f be d2          	movsx  rdx,dl
  400a46:	48 01 d2             	add    rdx,rdx
  400a49:	48 01 d0             	add    rax,rdx
  400a4c:	0f b7 00             	movzx  eax,WORD PTR [rax]
  400a4f:	0f b7 c0             	movzx  eax,ax
  400a52:	25 00 08 00 00       	and    eax,0x800
  400a57:	85 c0                	test   eax,eax
  400a59:	75 0c                	jne    400a67 <next_token+0xf2>
  400a5b:	0f b6 45 a7          	movzx  eax,BYTE PTR [rbp-0x59]
  400a5f:	3c 2e                	cmp    al,0x2e
  400a61:	0f 85 02 01 00 00    	jne    400b69 <next_token+0x1f4>
  400a67:	0f b6 45 a7          	movzx  eax,BYTE PTR [rbp-0x59]
  400a6b:	88 45 b0             	mov    BYTE PTR [rbp-0x50],al
  400a6e:	c7 45 a8 01 00 00 00 	mov    DWORD PTR [rbp-0x58],0x1
  400a75:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  400a79:	8b 00                	mov    eax,DWORD PTR [rax]
  400a7b:	8d 50 ff             	lea    edx,[rax-0x1]
  400a7e:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  400a82:	89 10                	mov    DWORD PTR [rax],edx
  400a84:	eb 2f                	jmp    400ab5 <next_token+0x140>
  400a86:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  400a8a:	8b 00                	mov    eax,DWORD PTR [rax]
  400a8c:	48 63 d0             	movsxd rdx,eax
  400a8f:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
  400a93:	48 01 d0             	add    rax,rdx
  400a96:	0f b6 10             	movzx  edx,BYTE PTR [rax]
  400a99:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
  400a9c:	48 98                	cdqe   
  400a9e:	88 54 05 b0          	mov    BYTE PTR [rbp+rax*1-0x50],dl
  400aa2:	83 45 a8 01          	add    DWORD PTR [rbp-0x58],0x1
  400aa6:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  400aaa:	8b 00                	mov    eax,DWORD PTR [rax]
  400aac:	8d 50 ff             	lea    edx,[rax-0x1]
  400aaf:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  400ab3:	89 10                	mov    DWORD PTR [rax],edx
  400ab5:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  400ab9:	8b 00                	mov    eax,DWORD PTR [rax]
  400abb:	85 c0                	test   eax,eax
  400abd:	78 4f                	js     400b0e <next_token+0x199>
  400abf:	e8 cc fb ff ff       	call   400690 <__ctype_b_loc@plt>
  400ac4:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  400ac7:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  400acb:	8b 00                	mov    eax,DWORD PTR [rax]
  400acd:	48 63 c8             	movsxd rcx,eax
  400ad0:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
  400ad4:	48 01 c8             	add    rax,rcx
  400ad7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400ada:	48 0f be c0          	movsx  rax,al
  400ade:	48 01 c0             	add    rax,rax
  400ae1:	48 01 d0             	add    rax,rdx
  400ae4:	0f b7 00             	movzx  eax,WORD PTR [rax]
  400ae7:	0f b7 c0             	movzx  eax,ax
  400aea:	25 00 08 00 00       	and    eax,0x800
  400aef:	85 c0                	test   eax,eax
  400af1:	75 93                	jne    400a86 <next_token+0x111>
  400af3:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  400af7:	8b 00                	mov    eax,DWORD PTR [rax]
  400af9:	48 63 d0             	movsxd rdx,eax
  400afc:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
  400b00:	48 01 d0             	add    rax,rdx
  400b03:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400b06:	3c 2e                	cmp    al,0x2e
  400b08:	0f 84 78 ff ff ff    	je     400a86 <next_token+0x111>
  400b0e:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
  400b11:	83 e8 01             	sub    eax,0x1
  400b14:	89 45 ac             	mov    DWORD PTR [rbp-0x54],eax
  400b17:	eb 1e                	jmp    400b37 <next_token+0x1c2>
  400b19:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
  400b1c:	2b 45 ac             	sub    eax,DWORD PTR [rbp-0x54]
  400b1f:	8d 48 ff             	lea    ecx,[rax-0x1]
  400b22:	8b 45 ac             	mov    eax,DWORD PTR [rbp-0x54]
  400b25:	48 98                	cdqe   
  400b27:	0f b6 54 05 b0       	movzx  edx,BYTE PTR [rbp+rax*1-0x50]
  400b2c:	48 63 c1             	movsxd rax,ecx
  400b2f:	88 54 05 d0          	mov    BYTE PTR [rbp+rax*1-0x30],dl
  400b33:	83 6d ac 01          	sub    DWORD PTR [rbp-0x54],0x1
  400b37:	83 7d ac 00          	cmp    DWORD PTR [rbp-0x54],0x0
  400b3b:	79 dc                	jns    400b19 <next_token+0x1a4>
  400b3d:	8b 45 a8             	mov    eax,DWORD PTR [rbp-0x58]
  400b40:	48 98                	cdqe   
  400b42:	c6 44 05 d0 00       	mov    BYTE PTR [rbp+rax*1-0x30],0x0
  400b47:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  400b4b:	8b 00                	mov    eax,DWORD PTR [rax]
  400b4d:	8d 50 01             	lea    edx,[rax+0x1]
  400b50:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  400b54:	89 10                	mov    DWORD PTR [rax],edx
  400b56:	48 8d 45 d0          	lea    rax,[rbp-0x30]
  400b5a:	48 89 c6             	mov    rsi,rax
  400b5d:	bf 00 00 00 00       	mov    edi,0x0
  400b62:	e8 3f fc ff ff       	call   4007a6 <create_token>
  400b67:	eb 22                	jmp    400b8b <next_token+0x216>
  400b69:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  400b6d:	8b 00                	mov    eax,DWORD PTR [rax]
  400b6f:	8d 50 ff             	lea    edx,[rax-0x1]
  400b72:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  400b76:	89 10                	mov    DWORD PTR [rax],edx
  400b78:	48 8b 45 90          	mov    rax,QWORD PTR [rbp-0x70]
  400b7c:	8b 00                	mov    eax,DWORD PTR [rax]
  400b7e:	85 c0                	test   eax,eax
  400b80:	0f 89 13 fe ff ff    	jns    400999 <next_token+0x24>
  400b86:	b8 00 00 00 00       	mov    eax,0x0
  400b8b:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
  400b8f:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
  400b96:	00 00 
  400b98:	74 05                	je     400b9f <next_token+0x22a>
  400b9a:	e8 a1 fa ff ff       	call   400640 <__stack_chk_fail@plt>
  400b9f:	c9                   	leave  
  400ba0:	c3                   	ret    

0000000000400ba1 <tokenize>:
  400ba1:	55                   	push   rbp
  400ba2:	48 89 e5             	mov    rbp,rsp
  400ba5:	48 83 ec 30          	sub    rsp,0x30
  400ba9:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  400bad:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  400bb1:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
  400bb8:	00 00 
  400bba:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  400bbe:	31 c0                	xor    eax,eax
  400bc0:	48 83 7d d0 00       	cmp    QWORD PTR [rbp-0x30],0x0
  400bc5:	75 07                	jne    400bce <tokenize+0x2d>
  400bc7:	b8 ff ff ff ff       	mov    eax,0xffffffff
  400bcc:	eb 7a                	jmp    400c48 <tokenize+0xa7>
  400bce:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400bd2:	48 89 c7             	mov    rdi,rax
  400bd5:	e8 56 fa ff ff       	call   400630 <strlen@plt>
  400bda:	83 e8 01             	sub    eax,0x1
  400bdd:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
  400be0:	48 8d 55 e8          	lea    rdx,[rbp-0x18]
  400be4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400be8:	48 89 d6             	mov    rsi,rdx
  400beb:	48 89 c7             	mov    rdi,rax
  400bee:	e8 82 fd ff ff       	call   400975 <next_token>
  400bf3:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  400bf7:	eb 43                	jmp    400c3c <tokenize+0x9b>
  400bf9:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
  400bfc:	83 e8 01             	sub    eax,0x1
  400bff:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
  400c02:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  400c06:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  400c0a:	48 89 d6             	mov    rsi,rdx
  400c0d:	48 89 c7             	mov    rdi,rax
  400c10:	e8 53 fc ff ff       	call   400868 <push>
  400c15:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
  400c18:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
  400c1c:	79 07                	jns    400c25 <tokenize+0x84>
  400c1e:	b8 ff ff ff ff       	mov    eax,0xffffffff
  400c23:	eb 23                	jmp    400c48 <tokenize+0xa7>
  400c25:	48 8d 55 e8          	lea    rdx,[rbp-0x18]
  400c29:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400c2d:	48 89 d6             	mov    rsi,rdx
  400c30:	48 89 c7             	mov    rdi,rax
  400c33:	e8 3d fd ff ff       	call   400975 <next_token>
  400c38:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  400c3c:	48 83 7d f0 00       	cmp    QWORD PTR [rbp-0x10],0x0
  400c41:	75 b6                	jne    400bf9 <tokenize+0x58>
  400c43:	b8 00 00 00 00       	mov    eax,0x0
  400c48:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
  400c4c:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
  400c53:	00 00 
  400c55:	74 05                	je     400c5c <tokenize+0xbb>
  400c57:	e8 e4 f9 ff ff       	call   400640 <__stack_chk_fail@plt>
  400c5c:	c9                   	leave  
  400c5d:	c3                   	ret    

0000000000400c5e <eval_md_operand>:
  400c5e:	55                   	push   rbp
  400c5f:	48 89 e5             	mov    rbp,rsp
  400c62:	48 83 ec 30          	sub    rsp,0x30
  400c66:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  400c6a:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  400c6e:	66 0f ef c0          	pxor   xmm0,xmm0
  400c72:	f2 0f 11 45 f0       	movsd  QWORD PTR [rbp-0x10],xmm0
  400c77:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400c7b:	48 89 c7             	mov    rdi,rax
  400c7e:	e8 43 fc ff ff       	call   4008c6 <pop>
  400c83:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  400c87:	c7 45 ec 01 00 00 00 	mov    DWORD PTR [rbp-0x14],0x1
  400c8e:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  400c93:	75 13                	jne    400ca8 <eval_md_operand+0x4a>
  400c95:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  400c99:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
  400c9f:	66 0f ef c0          	pxor   xmm0,xmm0
  400ca3:	e9 92 01 00 00       	jmp    400e3a <eval_md_operand+0x1dc>
  400ca8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400cac:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  400cb0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400cb3:	3c 2d                	cmp    al,0x2d
  400cb5:	75 21                	jne    400cd8 <eval_md_operand+0x7a>
  400cb7:	f7 5d ec             	neg    DWORD PTR [rbp-0x14]
  400cba:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400cbe:	48 89 c7             	mov    rdi,rax
  400cc1:	e8 31 fb ff ff       	call   4007f7 <destroy_token>
  400cc6:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400cca:	48 89 c7             	mov    rdi,rax
  400ccd:	e8 f4 fb ff ff       	call   4008c6 <pop>
  400cd2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  400cd6:	eb 2b                	jmp    400d03 <eval_md_operand+0xa5>
  400cd8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400cdc:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  400ce0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400ce3:	3c 2b                	cmp    al,0x2b
  400ce5:	75 1c                	jne    400d03 <eval_md_operand+0xa5>
  400ce7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400ceb:	48 89 c7             	mov    rdi,rax
  400cee:	e8 04 fb ff ff       	call   4007f7 <destroy_token>
  400cf3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400cf7:	48 89 c7             	mov    rdi,rax
  400cfa:	e8 c7 fb ff ff       	call   4008c6 <pop>
  400cff:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  400d03:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  400d08:	75 13                	jne    400d1d <eval_md_operand+0xbf>
  400d0a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  400d0e:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
  400d14:	66 0f ef c0          	pxor   xmm0,xmm0
  400d18:	e9 1d 01 00 00       	jmp    400e3a <eval_md_operand+0x1dc>
  400d1d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400d21:	8b 00                	mov    eax,DWORD PTR [rax]
  400d23:	85 c0                	test   eax,eax
  400d25:	75 2f                	jne    400d56 <eval_md_operand+0xf8>
  400d27:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400d2b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  400d2f:	be 00 00 00 00       	mov    esi,0x0
  400d34:	48 89 c7             	mov    rdi,rax
  400d37:	e8 e4 f8 ff ff       	call   400620 <strtod@plt>
  400d3c:	66 48 0f 7e c0       	movq   rax,xmm0
  400d41:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  400d45:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400d49:	48 89 c7             	mov    rdi,rax
  400d4c:	e8 a6 fa ff ff       	call   4007f7 <destroy_token>
  400d51:	e9 d6 00 00 00       	jmp    400e2c <eval_md_operand+0x1ce>
  400d56:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400d5a:	8b 00                	mov    eax,DWORD PTR [rax]
  400d5c:	83 f8 02             	cmp    eax,0x2
  400d5f:	0f 85 ab 00 00 00    	jne    400e10 <eval_md_operand+0x1b2>
  400d65:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400d69:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  400d6d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400d70:	3c 28                	cmp    al,0x28
  400d72:	75 71                	jne    400de5 <eval_md_operand+0x187>
  400d74:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  400d78:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400d7c:	48 89 d6             	mov    rsi,rdx
  400d7f:	48 89 c7             	mov    rdi,rax
  400d82:	e8 ae 01 00 00       	call   400f35 <eval>
  400d87:	66 48 0f 7e c0       	movq   rax,xmm0
  400d8c:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  400d90:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400d94:	48 89 c7             	mov    rdi,rax
  400d97:	e8 5b fa ff ff       	call   4007f7 <destroy_token>
  400d9c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400da0:	48 89 c7             	mov    rdi,rax
  400da3:	e8 1e fb ff ff       	call   4008c6 <pop>
  400da8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  400dac:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  400db1:	74 0f                	je     400dc2 <eval_md_operand+0x164>
  400db3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400db7:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  400dbb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400dbe:	3c 29                	cmp    al,0x29
  400dc0:	74 6a                	je     400e2c <eval_md_operand+0x1ce>
  400dc2:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  400dc6:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
  400dcc:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  400dd1:	74 0c                	je     400ddf <eval_md_operand+0x181>
  400dd3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400dd7:	48 89 c7             	mov    rdi,rax
  400dda:	e8 18 fa ff ff       	call   4007f7 <destroy_token>
  400ddf:	66 0f ef c0          	pxor   xmm0,xmm0
  400de3:	eb 55                	jmp    400e3a <eval_md_operand+0x1dc>
  400de5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400de9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  400ded:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400df0:	3c 29                	cmp    al,0x29
  400df2:	75 38                	jne    400e2c <eval_md_operand+0x1ce>
  400df4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400df8:	48 89 c7             	mov    rdi,rax
  400dfb:	e8 f7 f9 ff ff       	call   4007f7 <destroy_token>
  400e00:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  400e04:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
  400e0a:	66 0f ef c0          	pxor   xmm0,xmm0
  400e0e:	eb 2a                	jmp    400e3a <eval_md_operand+0x1dc>
  400e10:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  400e14:	48 89 c7             	mov    rdi,rax
  400e17:	e8 db f9 ff ff       	call   4007f7 <destroy_token>
  400e1c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  400e20:	c7 00 01 00 00 00    	mov    DWORD PTR [rax],0x1
  400e26:	66 0f ef c0          	pxor   xmm0,xmm0
  400e2a:	eb 0e                	jmp    400e3a <eval_md_operand+0x1dc>
  400e2c:	66 0f ef c0          	pxor   xmm0,xmm0
  400e30:	f2 0f 2a 45 ec       	cvtsi2sd xmm0,DWORD PTR [rbp-0x14]
  400e35:	f2 0f 59 45 f0       	mulsd  xmm0,QWORD PTR [rbp-0x10]
  400e3a:	c9                   	leave  
  400e3b:	c3                   	ret    

0000000000400e3c <eval_as_operand>:
  400e3c:	55                   	push   rbp
  400e3d:	48 89 e5             	mov    rbp,rsp
  400e40:	48 83 ec 30          	sub    rsp,0x30
  400e44:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  400e48:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  400e4c:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  400e50:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400e54:	48 89 d6             	mov    rsi,rdx
  400e57:	48 89 c7             	mov    rdi,rax
  400e5a:	e8 ff fd ff ff       	call   400c5e <eval_md_operand>
  400e5f:	66 48 0f 7e c0       	movq   rax,xmm0
  400e64:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  400e68:	f2 0f 10 45 f0       	movsd  xmm0,QWORD PTR [rbp-0x10]
  400e6d:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
  400e72:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400e76:	48 89 c7             	mov    rdi,rax
  400e79:	e8 48 fa ff ff       	call   4008c6 <pop>
  400e7e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  400e82:	e9 9c 00 00 00       	jmp    400f23 <eval_as_operand+0xe7>
  400e87:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400e8b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  400e8f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400e92:	3c 2a                	cmp    al,0x2a
  400e94:	74 0f                	je     400ea5 <eval_as_operand+0x69>
  400e96:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400e9a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  400e9e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400ea1:	3c 2f                	cmp    al,0x2f
  400ea3:	75 69                	jne    400f0e <eval_as_operand+0xd2>
  400ea5:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  400ea9:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400ead:	48 89 d6             	mov    rsi,rdx
  400eb0:	48 89 c7             	mov    rdi,rax
  400eb3:	e8 a6 fd ff ff       	call   400c5e <eval_md_operand>
  400eb8:	66 48 0f 7e c0       	movq   rax,xmm0
  400ebd:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  400ec1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400ec5:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  400ec9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400ecc:	3c 2a                	cmp    al,0x2a
  400ece:	75 11                	jne    400ee1 <eval_as_operand+0xa5>
  400ed0:	f2 0f 10 45 e0       	movsd  xmm0,QWORD PTR [rbp-0x20]
  400ed5:	f2 0f 59 45 f8       	mulsd  xmm0,QWORD PTR [rbp-0x8]
  400eda:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
  400edf:	eb 0f                	jmp    400ef0 <eval_as_operand+0xb4>
  400ee1:	f2 0f 10 45 e0       	movsd  xmm0,QWORD PTR [rbp-0x20]
  400ee6:	f2 0f 5e 45 f8       	divsd  xmm0,QWORD PTR [rbp-0x8]
  400eeb:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
  400ef0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400ef4:	48 89 c7             	mov    rdi,rax
  400ef7:	e8 fb f8 ff ff       	call   4007f7 <destroy_token>
  400efc:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400f00:	48 89 c7             	mov    rdi,rax
  400f03:	e8 be f9 ff ff       	call   4008c6 <pop>
  400f08:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  400f0c:	eb 15                	jmp    400f23 <eval_as_operand+0xe7>
  400f0e:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  400f12:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400f16:	48 89 d6             	mov    rsi,rdx
  400f19:	48 89 c7             	mov    rdi,rax
  400f1c:	e8 47 f9 ff ff       	call   400868 <push>
  400f21:	eb 0b                	jmp    400f2e <eval_as_operand+0xf2>
  400f23:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
  400f28:	0f 85 59 ff ff ff    	jne    400e87 <eval_as_operand+0x4b>
  400f2e:	f2 0f 10 45 e0       	movsd  xmm0,QWORD PTR [rbp-0x20]
  400f33:	c9                   	leave  
  400f34:	c3                   	ret    

0000000000400f35 <eval>:
  400f35:	55                   	push   rbp
  400f36:	48 89 e5             	mov    rbp,rsp
  400f39:	48 83 ec 30          	sub    rsp,0x30
  400f3d:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  400f41:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  400f45:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  400f49:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400f4d:	48 89 d6             	mov    rsi,rdx
  400f50:	48 89 c7             	mov    rdi,rax
  400f53:	e8 e4 fe ff ff       	call   400e3c <eval_as_operand>
  400f58:	66 48 0f 7e c0       	movq   rax,xmm0
  400f5d:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  400f61:	f2 0f 10 45 f0       	movsd  xmm0,QWORD PTR [rbp-0x10]
  400f66:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
  400f6b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400f6f:	48 89 c7             	mov    rdi,rax
  400f72:	e8 4f f9 ff ff       	call   4008c6 <pop>
  400f77:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  400f7b:	e9 ab 00 00 00       	jmp    40102b <eval+0xf6>
  400f80:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400f84:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  400f88:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400f8b:	3c 2b                	cmp    al,0x2b
  400f8d:	74 0f                	je     400f9e <eval+0x69>
  400f8f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400f93:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  400f97:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400f9a:	3c 2d                	cmp    al,0x2d
  400f9c:	75 78                	jne    401016 <eval+0xe1>
  400f9e:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  400fa2:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  400fa6:	48 89 d6             	mov    rsi,rdx
  400fa9:	48 89 c7             	mov    rdi,rax
  400fac:	e8 8b fe ff ff       	call   400e3c <eval_as_operand>
  400fb1:	66 48 0f 7e c0       	movq   rax,xmm0
  400fb6:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  400fba:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400fbe:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  400fc2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400fc5:	3c 2b                	cmp    al,0x2b
  400fc7:	75 11                	jne    400fda <eval+0xa5>
  400fc9:	f2 0f 10 45 e0       	movsd  xmm0,QWORD PTR [rbp-0x20]
  400fce:	f2 0f 58 45 f8       	addsd  xmm0,QWORD PTR [rbp-0x8]
  400fd3:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
  400fd8:	eb 1e                	jmp    400ff8 <eval+0xc3>
  400fda:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400fde:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  400fe2:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  400fe5:	3c 2d                	cmp    al,0x2d
  400fe7:	75 0f                	jne    400ff8 <eval+0xc3>
  400fe9:	f2 0f 10 45 e0       	movsd  xmm0,QWORD PTR [rbp-0x20]
  400fee:	f2 0f 5c 45 f8       	subsd  xmm0,QWORD PTR [rbp-0x8]
  400ff3:	f2 0f 11 45 e0       	movsd  QWORD PTR [rbp-0x20],xmm0
  400ff8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  400ffc:	48 89 c7             	mov    rdi,rax
  400fff:	e8 f3 f7 ff ff       	call   4007f7 <destroy_token>
  401004:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  401008:	48 89 c7             	mov    rdi,rax
  40100b:	e8 b6 f8 ff ff       	call   4008c6 <pop>
  401010:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  401014:	eb 15                	jmp    40102b <eval+0xf6>
  401016:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  40101a:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  40101e:	48 89 d6             	mov    rsi,rdx
  401021:	48 89 c7             	mov    rdi,rax
  401024:	e8 3f f8 ff ff       	call   400868 <push>
  401029:	eb 0b                	jmp    401036 <eval+0x101>
  40102b:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
  401030:	0f 85 4a ff ff ff    	jne    400f80 <eval+0x4b>
  401036:	f2 0f 10 45 e0       	movsd  xmm0,QWORD PTR [rbp-0x20]
  40103b:	c9                   	leave  
  40103c:	c3                   	ret    

000000000040103d <print_stack>:
  40103d:	55                   	push   rbp
  40103e:	48 89 e5             	mov    rbp,rsp
  401041:	48 83 ec 20          	sub    rsp,0x20
  401045:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  401049:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40104d:	48 89 c7             	mov    rdi,rax
  401050:	e8 71 f8 ff ff       	call   4008c6 <pop>
  401055:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  401059:	eb 36                	jmp    401091 <print_stack+0x54>
  40105b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  40105f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  401063:	48 89 c6             	mov    rsi,rax
  401066:	bf f4 11 40 00       	mov    edi,0x4011f4
  40106b:	b8 00 00 00 00       	mov    eax,0x0
  401070:	e8 db f5 ff ff       	call   400650 <printf@plt>
  401075:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  401079:	48 89 c7             	mov    rdi,rax
  40107c:	e8 76 f7 ff ff       	call   4007f7 <destroy_token>
  401081:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401085:	48 89 c7             	mov    rdi,rax
  401088:	e8 39 f8 ff ff       	call   4008c6 <pop>
  40108d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  401091:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  401096:	75 c3                	jne    40105b <print_stack+0x1e>
  401098:	90                   	nop
  401099:	c9                   	leave  
  40109a:	c3                   	ret    

000000000040109b <main>:
  40109b:	55                   	push   rbp
  40109c:	48 89 e5             	mov    rbp,rsp
  40109f:	48 83 ec 50          	sub    rsp,0x50
  4010a3:	89 7d cc             	mov    DWORD PTR [rbp-0x34],edi
  4010a6:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
  4010aa:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
  4010b1:	00 00 
  4010b3:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  4010b7:	31 c0                	xor    eax,eax
  4010b9:	83 7d cc 01          	cmp    DWORD PTR [rbp-0x34],0x1
  4010bd:	7e 0a                	jle    4010c9 <main+0x2e>
  4010bf:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
  4010c3:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  4010c7:	eb 05                	jmp    4010ce <main+0x33>
  4010c9:	b8 08 12 40 00       	mov    eax,0x401208
  4010ce:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  4010d2:	b8 00 00 00 00       	mov    eax,0x0
  4010d7:	e8 46 f7 ff ff       	call   400822 <create_stack>
  4010dc:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  4010e0:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
  4010e7:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  4010eb:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  4010ef:	48 89 d6             	mov    rsi,rdx
  4010f2:	48 89 c7             	mov    rdi,rax
  4010f5:	e8 a7 fa ff ff       	call   400ba1 <tokenize>
  4010fa:	48 8d 55 dc          	lea    rdx,[rbp-0x24]
  4010fe:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  401102:	48 89 d6             	mov    rsi,rdx
  401105:	48 89 c7             	mov    rdi,rax
  401108:	e8 28 fe ff ff       	call   400f35 <eval>
  40110d:	66 48 0f 7e c0       	movq   rax,xmm0
  401112:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  401116:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  401119:	83 f8 01             	cmp    eax,0x1
  40111c:	75 0c                	jne    40112a <main+0x8f>
  40111e:	bf 1b 12 40 00       	mov    edi,0x40121b
  401123:	e8 e8 f4 ff ff       	call   400610 <puts@plt>
  401128:	eb 1c                	jmp    401146 <main+0xab>
  40112a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  40112e:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  401132:	f2 0f 10 45 b8       	movsd  xmm0,QWORD PTR [rbp-0x48]
  401137:	bf 2e 12 40 00       	mov    edi,0x40122e
  40113c:	b8 01 00 00 00       	mov    eax,0x1
  401141:	e8 0a f5 ff ff       	call   400650 <printf@plt>
  401146:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  40114a:	48 89 c7             	mov    rdi,rax
  40114d:	e8 b4 f7 ff ff       	call   400906 <destroy_stack>
  401152:	b8 00 00 00 00       	mov    eax,0x0
  401157:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
  40115b:	64 48 33 0c 25 28 00 	xor    rcx,QWORD PTR fs:0x28
  401162:	00 00 
  401164:	74 05                	je     40116b <main+0xd0>
  401166:	e8 d5 f4 ff ff       	call   400640 <__stack_chk_fail@plt>
  40116b:	c9                   	leave  
  40116c:	c3                   	ret    
  40116d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000401170 <__libc_csu_init>:
  401170:	41 57                	push   r15
  401172:	41 56                	push   r14
  401174:	41 89 ff             	mov    r15d,edi
  401177:	41 55                	push   r13
  401179:	41 54                	push   r12
  40117b:	4c 8d 25 8e 0c 20 00 	lea    r12,[rip+0x200c8e]        # 601e10 <__frame_dummy_init_array_entry>
  401182:	55                   	push   rbp
  401183:	48 8d 2d 8e 0c 20 00 	lea    rbp,[rip+0x200c8e]        # 601e18 <__init_array_end>
  40118a:	53                   	push   rbx
  40118b:	49 89 f6             	mov    r14,rsi
  40118e:	49 89 d5             	mov    r13,rdx
  401191:	4c 29 e5             	sub    rbp,r12
  401194:	48 83 ec 08          	sub    rsp,0x8
  401198:	48 c1 fd 03          	sar    rbp,0x3
  40119c:	e8 2f f4 ff ff       	call   4005d0 <_init>
  4011a1:	48 85 ed             	test   rbp,rbp
  4011a4:	74 20                	je     4011c6 <__libc_csu_init+0x56>
  4011a6:	31 db                	xor    ebx,ebx
  4011a8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  4011af:	00 
  4011b0:	4c 89 ea             	mov    rdx,r13
  4011b3:	4c 89 f6             	mov    rsi,r14
  4011b6:	44 89 ff             	mov    edi,r15d
  4011b9:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  4011bd:	48 83 c3 01          	add    rbx,0x1
  4011c1:	48 39 eb             	cmp    rbx,rbp
  4011c4:	75 ea                	jne    4011b0 <__libc_csu_init+0x40>
  4011c6:	48 83 c4 08          	add    rsp,0x8
  4011ca:	5b                   	pop    rbx
  4011cb:	5d                   	pop    rbp
  4011cc:	41 5c                	pop    r12
  4011ce:	41 5d                	pop    r13
  4011d0:	41 5e                	pop    r14
  4011d2:	41 5f                	pop    r15
  4011d4:	c3                   	ret    
  4011d5:	90                   	nop
  4011d6:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  4011dd:	00 00 00 

00000000004011e0 <__libc_csu_fini>:
  4011e0:	f3 c3                	repz ret 

Disassembly of section .fini:

00000000004011e4 <_fini>:
  4011e4:	48 83 ec 08          	sub    rsp,0x8
  4011e8:	48 83 c4 08          	add    rsp,0x8
  4011ec:	c3                   	ret    

Disassembly of section .rodata:

00000000004011f0 <_IO_stdin_used>:
  4011f0:	01 00                	add    DWORD PTR [rax],eax
  4011f2:	02 00                	add    al,BYTE PTR [rax]
  4011f4:	54                   	push   rsp
  4011f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4011f6:	6b 65 6e 20          	imul   esp,DWORD PTR [rbp+0x6e],0x20
  4011fa:	68 61 73 20 76       	push   0x76207361
  4011ff:	61                   	(bad)  
  401200:	6c                   	ins    BYTE PTR es:[rdi],dx
  401201:	75 65                	jne    401268 <__GNU_EH_FRAME_HDR+0x34>
  401203:	20 25 73 0a 00 35    	and    BYTE PTR [rip+0x35000a73],ah        # 35401c7c <_end+0x34dffbfc>
  401209:	2b 32                	sub    esi,DWORD PTR [rdx]
  40120b:	2a 33                	sub    dh,BYTE PTR [rbx]
  40120d:	2e 31 34 20          	xor    DWORD PTR cs:[rax+riz*1],esi
  401211:	2d 20 28 35 2a       	sub    eax,0x2a352820
  401216:	32 2f                	xor    ch,BYTE PTR [rdi]
  401218:	33 29                	xor    ebp,DWORD PTR [rcx]
  40121a:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
  40121d:	76 61                	jbe    401280 <__GNU_EH_FRAME_HDR+0x4c>
  40121f:	6c                   	ins    BYTE PTR es:[rdi],dx
  401220:	69 64 20 65 78 70 72 	imul   esp,DWORD PTR [rax+riz*1+0x65],0x65727078
  401227:	65 
  401228:	73 73                	jae    40129d <__GNU_EH_FRAME_HDR+0x69>
  40122a:	69 6f 6e 00 25 66 0a 	imul   ebp,DWORD PTR [rdi+0x6e],0xa662500
	...

Disassembly of section .eh_frame_hdr:

0000000000401234 <__GNU_EH_FRAME_HDR>:
  401234:	01 1b                	add    DWORD PTR [rbx],ebx
  401236:	03 3b                	add    edi,DWORD PTR [rbx]
  401238:	a0 00 00 00 13 00 00 	movabs al,ds:0xbc00000013000000
  40123f:	00 bc 
  401241:	f3 ff                	repz (bad) 
  401243:	ff                   	(bad)  
  401244:	ec                   	in     al,dx
  401245:	00 00                	add    BYTE PTR [rax],al
  401247:	00 7c f4 ff          	add    BYTE PTR [rsp+rsi*8-0x1],bh
  40124b:	ff                   	(bad)  
  40124c:	bc 00 00 00 72       	mov    esp,0x72000000
  401251:	f5                   	cmc    
  401252:	ff                   	(bad)  
  401253:	ff 14 01             	call   QWORD PTR [rcx+rax*1]
  401256:	00 00                	add    BYTE PTR [rax],al
  401258:	c3                   	ret    
  401259:	f5                   	cmc    
  40125a:	ff                   	(bad)  
  40125b:	ff 34 01             	push   QWORD PTR [rcx+rax*1]
  40125e:	00 00                	add    BYTE PTR [rax],al
  401260:	ee                   	out    dx,al
  401261:	f5                   	cmc    
  401262:	ff                   	(bad)  
  401263:	ff 54 01 00          	call   QWORD PTR [rcx+rax*1+0x0]
  401267:	00 18                	add    BYTE PTR [rax],bl
  401269:	f6 ff                	idiv   bh
  40126b:	ff 74 01 00          	push   QWORD PTR [rcx+rax*1+0x0]
  40126f:	00 34 f6             	add    BYTE PTR [rsi+rsi*8],dh
  401272:	ff                   	(bad)  
  401273:	ff 94 01 00 00 92 f6 	call   QWORD PTR [rcx+rax*1-0x96e0000]
  40127a:	ff                   	(bad)  
  40127b:	ff b4 01 00 00 d2 f6 	push   QWORD PTR [rcx+rax*1-0x92e0000]
  401282:	ff                   	(bad)  
  401283:	ff d4                	call   rsp
  401285:	01 00                	add    DWORD PTR [rax],eax
  401287:	00 12                	add    BYTE PTR [rdx],dl
  401289:	f7 ff                	idiv   edi
  40128b:	ff f4                	push   rsp
  40128d:	01 00                	add    DWORD PTR [rax],eax
  40128f:	00 41 f7             	add    BYTE PTR [rcx-0x9],al
  401292:	ff                   	(bad)  
  401293:	ff 14 02             	call   QWORD PTR [rdx+rax*1]
  401296:	00 00                	add    BYTE PTR [rax],al
  401298:	6d                   	ins    DWORD PTR es:[rdi],dx
  401299:	f9                   	stc    
  40129a:	ff                   	(bad)  
  40129b:	ff 34 02             	push   QWORD PTR [rdx+rax*1]
  40129e:	00 00                	add    BYTE PTR [rax],al
  4012a0:	2a fa                	sub    bh,dl
  4012a2:	ff                   	(bad)  
  4012a3:	ff 54 02 00          	call   QWORD PTR [rdx+rax*1+0x0]
  4012a7:	00 08                	add    BYTE PTR [rax],cl
  4012a9:	fc                   	cld    
  4012aa:	ff                   	(bad)  
  4012ab:	ff 74 02 00          	push   QWORD PTR [rdx+rax*1+0x0]
  4012af:	00 01                	add    BYTE PTR [rcx],al
  4012b1:	fd                   	std    
  4012b2:	ff                   	(bad)  
  4012b3:	ff 94 02 00 00 09 fe 	call   QWORD PTR [rdx+rax*1-0x1f70000]
  4012ba:	ff                   	(bad)  
  4012bb:	ff b4 02 00 00 67 fe 	push   QWORD PTR [rdx+rax*1-0x1990000]
  4012c2:	ff                   	(bad)  
  4012c3:	ff d4                	call   rsp
  4012c5:	02 00                	add    al,BYTE PTR [rax]
  4012c7:	00 3c ff             	add    BYTE PTR [rdi+rdi*8],bh
  4012ca:	ff                   	(bad)  
  4012cb:	ff f4                	push   rsp
  4012cd:	02 00                	add    al,BYTE PTR [rax]
  4012cf:	00 ac ff ff ff 3c 03 	add    BYTE PTR [rdi+rdi*8+0x33cffff],ch
	...

Disassembly of section .eh_frame:

00000000004012d8 <__FRAME_END__-0x2b0>:
  4012d8:	14 00                	adc    al,0x0
  4012da:	00 00                	add    BYTE PTR [rax],al
  4012dc:	00 00                	add    BYTE PTR [rax],al
  4012de:	00 00                	add    BYTE PTR [rax],al
  4012e0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  4012e3:	00 01                	add    BYTE PTR [rcx],al
  4012e5:	78 10                	js     4012f7 <__GNU_EH_FRAME_HDR+0xc3>
  4012e7:	01 1b                	add    DWORD PTR [rbx],ebx
  4012e9:	0c 07                	or     al,0x7
  4012eb:	08 90 01 07 10 14    	or     BYTE PTR [rax+0x14100701],dl
  4012f1:	00 00                	add    BYTE PTR [rax],al
  4012f3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4012f6:	00 00                	add    BYTE PTR [rax],al
  4012f8:	b8 f3 ff ff 2a       	mov    eax,0x2afffff3
	...
  401305:	00 00                	add    BYTE PTR [rax],al
  401307:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  40130a:	00 00                	add    BYTE PTR [rax],al
  40130c:	00 00                	add    BYTE PTR [rax],al
  40130e:	00 00                	add    BYTE PTR [rax],al
  401310:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  401313:	00 01                	add    BYTE PTR [rcx],al
  401315:	78 10                	js     401327 <__GNU_EH_FRAME_HDR+0xf3>
  401317:	01 1b                	add    DWORD PTR [rbx],ebx
  401319:	0c 07                	or     al,0x7
  40131b:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
  401321:	00 00                	add    BYTE PTR [rax],al
  401323:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  401326:	00 00                	add    BYTE PTR [rax],al
  401328:	c8 f2 ff ff          	enter  0xfff2,0xff
  40132c:	b0 00                	mov    al,0x0
  40132e:	00 00                	add    BYTE PTR [rax],al
  401330:	00 0e                	add    BYTE PTR [rsi],cl
  401332:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
  401335:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
  401338:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
  40133b:	80 00 3f             	add    BYTE PTR [rax],0x3f
  40133e:	1a 3b                	sbb    bh,BYTE PTR [rbx]
  401340:	2a 33                	sub    dh,BYTE PTR [rbx]
  401342:	24 22                	and    al,0x22
  401344:	00 00                	add    BYTE PTR [rax],al
  401346:	00 00                	add    BYTE PTR [rax],al
  401348:	1c 00                	sbb    al,0x0
  40134a:	00 00                	add    BYTE PTR [rax],al
  40134c:	44 00 00             	add    BYTE PTR [rax],r8b
  40134f:	00 56 f4             	add    BYTE PTR [rsi-0xc],dl
  401352:	ff                   	(bad)  
  401353:	ff 51 00             	call   QWORD PTR [rcx+0x0]
  401356:	00 00                	add    BYTE PTR [rax],al
  401358:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40135b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401361:	02 4c 0c 07          	add    cl,BYTE PTR [rsp+rcx*1+0x7]
  401365:	08 00                	or     BYTE PTR [rax],al
  401367:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40136a:	00 00                	add    BYTE PTR [rax],al
  40136c:	64 00 00             	add    BYTE PTR fs:[rax],al
  40136f:	00 87 f4 ff ff 2b    	add    BYTE PTR [rdi+0x2bfffff4],al
  401375:	00 00                	add    BYTE PTR [rax],al
  401377:	00 00                	add    BYTE PTR [rax],al
  401379:	41 0e                	rex.B (bad) 
  40137b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401381:	66 0c 07             	data16 or al,0x7
  401384:	08 00                	or     BYTE PTR [rax],al
  401386:	00 00                	add    BYTE PTR [rax],al
  401388:	1c 00                	sbb    al,0x0
  40138a:	00 00                	add    BYTE PTR [rax],al
  40138c:	84 00                	test   BYTE PTR [rax],al
  40138e:	00 00                	add    BYTE PTR [rax],al
  401390:	92                   	xchg   edx,eax
  401391:	f4                   	hlt    
  401392:	ff                   	(bad)  
  401393:	ff 2a                	jmp    FWORD PTR [rdx]
  401395:	00 00                	add    BYTE PTR [rax],al
  401397:	00 00                	add    BYTE PTR [rax],al
  401399:	41 0e                	rex.B (bad) 
  40139b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4013a1:	65 0c 07             	gs or  al,0x7
  4013a4:	08 00                	or     BYTE PTR [rax],al
  4013a6:	00 00                	add    BYTE PTR [rax],al
  4013a8:	1c 00                	sbb    al,0x0
  4013aa:	00 00                	add    BYTE PTR [rax],al
  4013ac:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4013ad:	00 00                	add    BYTE PTR [rax],al
  4013af:	00 9c f4 ff ff 1c 00 	add    BYTE PTR [rsp+rsi*8+0x1cffff],bl
  4013b6:	00 00                	add    BYTE PTR [rax],al
  4013b8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4013bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4013c1:	57                   	push   rdi
  4013c2:	0c 07                	or     al,0x7
  4013c4:	08 00                	or     BYTE PTR [rax],al
  4013c6:	00 00                	add    BYTE PTR [rax],al
  4013c8:	1c 00                	sbb    al,0x0
  4013ca:	00 00                	add    BYTE PTR [rax],al
  4013cc:	c4                   	(bad)  
  4013cd:	00 00                	add    BYTE PTR [rax],al
  4013cf:	00 98 f4 ff ff 5e    	add    BYTE PTR [rax+0x5efffff4],bl
  4013d5:	00 00                	add    BYTE PTR [rax],al
  4013d7:	00 00                	add    BYTE PTR [rax],al
  4013d9:	41 0e                	rex.B (bad) 
  4013db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4013e1:	02 59 0c             	add    bl,BYTE PTR [rcx+0xc]
  4013e4:	07                   	(bad)  
  4013e5:	08 00                	or     BYTE PTR [rax],al
  4013e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4013ea:	00 00                	add    BYTE PTR [rax],al
  4013ec:	e4 00                	in     al,0x0
  4013ee:	00 00                	add    BYTE PTR [rax],al
  4013f0:	d6                   	(bad)  
  4013f1:	f4                   	hlt    
  4013f2:	ff                   	(bad)  
  4013f3:	ff 40 00             	inc    DWORD PTR [rax+0x0]
  4013f6:	00 00                	add    BYTE PTR [rax],al
  4013f8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4013fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401401:	7b 0c                	jnp    40140f <__GNU_EH_FRAME_HDR+0x1db>
  401403:	07                   	(bad)  
  401404:	08 00                	or     BYTE PTR [rax],al
  401406:	00 00                	add    BYTE PTR [rax],al
  401408:	1c 00                	sbb    al,0x0
  40140a:	00 00                	add    BYTE PTR [rax],al
  40140c:	04 01                	add    al,0x1
  40140e:	00 00                	add    BYTE PTR [rax],al
  401410:	f6 f4                	div    ah
  401412:	ff                   	(bad)  
  401413:	ff 40 00             	inc    DWORD PTR [rax+0x0]
  401416:	00 00                	add    BYTE PTR [rax],al
  401418:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40141b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401421:	7b 0c                	jnp    40142f <__GNU_EH_FRAME_HDR+0x1fb>
  401423:	07                   	(bad)  
  401424:	08 00                	or     BYTE PTR [rax],al
  401426:	00 00                	add    BYTE PTR [rax],al
  401428:	1c 00                	sbb    al,0x0
  40142a:	00 00                	add    BYTE PTR [rax],al
  40142c:	24 01                	and    al,0x1
  40142e:	00 00                	add    BYTE PTR [rax],al
  401430:	16                   	(bad)  
  401431:	f5                   	cmc    
  401432:	ff                   	(bad)  
  401433:	ff 2f                	jmp    FWORD PTR [rdi]
  401435:	00 00                	add    BYTE PTR [rax],al
  401437:	00 00                	add    BYTE PTR [rax],al
  401439:	41 0e                	rex.B (bad) 
  40143b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401441:	6a 0c                	push   0xc
  401443:	07                   	(bad)  
  401444:	08 00                	or     BYTE PTR [rax],al
  401446:	00 00                	add    BYTE PTR [rax],al
  401448:	1c 00                	sbb    al,0x0
  40144a:	00 00                	add    BYTE PTR [rax],al
  40144c:	44 01 00             	add    DWORD PTR [rax],r8d
  40144f:	00 25 f5 ff ff 2c    	add    BYTE PTR [rip+0x2cfffff5],ah        # 2d40144a <_end+0x2cdff3ca>
  401455:	02 00                	add    al,BYTE PTR [rax]
  401457:	00 00                	add    BYTE PTR [rax],al
  401459:	41 0e                	rex.B (bad) 
  40145b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401461:	03 27                	add    esp,DWORD PTR [rdi]
  401463:	02 0c 07             	add    cl,BYTE PTR [rdi+rax*1]
  401466:	08 00                	or     BYTE PTR [rax],al
  401468:	1c 00                	sbb    al,0x0
  40146a:	00 00                	add    BYTE PTR [rax],al
  40146c:	64 01 00             	add    DWORD PTR fs:[rax],eax
  40146f:	00 31                	add    BYTE PTR [rcx],dh
  401471:	f7 ff                	idiv   edi
  401473:	ff                   	(bad)  
  401474:	bd 00 00 00 00       	mov    ebp,0x0
  401479:	41 0e                	rex.B (bad) 
  40147b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401481:	02 b8 0c 07 08 00    	add    bh,BYTE PTR [rax+0x8070c]
  401487:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40148a:	00 00                	add    BYTE PTR [rax],al
  40148c:	84 01                	test   BYTE PTR [rcx],al
  40148e:	00 00                	add    BYTE PTR [rax],al
  401490:	ce                   	(bad)  
  401491:	f7 ff                	idiv   edi
  401493:	ff                   	(bad)  
  401494:	de 01                	fiadd  WORD PTR [rcx]
  401496:	00 00                	add    BYTE PTR [rax],al
  401498:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  40149b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4014a1:	03 d9                	add    ebx,ecx
  4014a3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
  4014a6:	08 00                	or     BYTE PTR [rax],al
  4014a8:	1c 00                	sbb    al,0x0
  4014aa:	00 00                	add    BYTE PTR [rax],al
  4014ac:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  4014ad:	01 00                	add    DWORD PTR [rax],eax
  4014af:	00 8c f9 ff ff f9 00 	add    BYTE PTR [rcx+rdi*8+0xf9ffff],cl
  4014b6:	00 00                	add    BYTE PTR [rax],al
  4014b8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4014bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4014c1:	02 f4                	add    dh,ah
  4014c3:	0c 07                	or     al,0x7
  4014c5:	08 00                	or     BYTE PTR [rax],al
  4014c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  4014ca:	00 00                	add    BYTE PTR [rax],al
  4014cc:	c4 01 00 00          	(bad)  
  4014d0:	65 fa                	gs cli 
  4014d2:	ff                   	(bad)  
  4014d3:	ff 08                	dec    DWORD PTR [rax]
  4014d5:	01 00                	add    DWORD PTR [rax],eax
  4014d7:	00 00                	add    BYTE PTR [rax],al
  4014d9:	41 0e                	rex.B (bad) 
  4014db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  4014e1:	03 03                	add    eax,DWORD PTR [rbx]
  4014e3:	01 0c 07             	add    DWORD PTR [rdi+rax*1],ecx
  4014e6:	08 00                	or     BYTE PTR [rax],al
  4014e8:	1c 00                	sbb    al,0x0
  4014ea:	00 00                	add    BYTE PTR [rax],al
  4014ec:	e4 01                	in     al,0x1
  4014ee:	00 00                	add    BYTE PTR [rax],al
  4014f0:	4d fb                	rex.WRB sti 
  4014f2:	ff                   	(bad)  
  4014f3:	ff 5e 00             	call   FWORD PTR [rsi+0x0]
  4014f6:	00 00                	add    BYTE PTR [rax],al
  4014f8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  4014fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401501:	02 59 0c             	add    bl,BYTE PTR [rcx+0xc]
  401504:	07                   	(bad)  
  401505:	08 00                	or     BYTE PTR [rax],al
  401507:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  40150a:	00 00                	add    BYTE PTR [rax],al
  40150c:	04 02                	add    al,0x2
  40150e:	00 00                	add    BYTE PTR [rax],al
  401510:	8b fb                	mov    edi,ebx
  401512:	ff                   	(bad)  
  401513:	ff d2                	call   rdx
  401515:	00 00                	add    BYTE PTR [rax],al
  401517:	00 00                	add    BYTE PTR [rax],al
  401519:	41 0e                	rex.B (bad) 
  40151b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401521:	02 cd                	add    cl,ch
  401523:	0c 07                	or     al,0x7
  401525:	08 00                	or     BYTE PTR [rax],al
  401527:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
  40152b:	00 24 02             	add    BYTE PTR [rdx+rax*1],ah
  40152e:	00 00                	add    BYTE PTR [rax],al
  401530:	40 fc                	rex cld 
  401532:	ff                   	(bad)  
  401533:	ff 65 00             	jmp    QWORD PTR [rbp+0x0]
  401536:	00 00                	add    BYTE PTR [rax],al
  401538:	00 42 0e             	add    BYTE PTR [rdx+0xe],al
  40153b:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
  401541:	8e 03                	mov    es,WORD PTR [rbx]
  401543:	45 0e                	rex.RB (bad) 
  401545:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
  40154b:	8c 05 48 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e48],es        # ffffffff86702399 <_end+0xffffffff86100319>
  401551:	06                   	(bad)  
  401552:	48 0e                	rex.W (bad) 
  401554:	38 83 07 4d 0e 40    	cmp    BYTE PTR [rbx+0x400e4d07],al
  40155a:	72 0e                	jb     40156a <__GNU_EH_FRAME_HDR+0x336>
  40155c:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
  40155f:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
  401562:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
  401565:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
  401568:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
  40156b:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
  40156e:	08 00                	or     BYTE PTR [rax],al
  401570:	14 00                	adc    al,0x0
  401572:	00 00                	add    BYTE PTR [rax],al
  401574:	6c                   	ins    BYTE PTR es:[rdi],dx
  401575:	02 00                	add    al,BYTE PTR [rax]
  401577:	00 68 fc             	add    BYTE PTR [rax-0x4],ch
  40157a:	ff                   	(bad)  
  40157b:	ff 02                	inc    DWORD PTR [rdx]
	...

0000000000401588 <__FRAME_END__>:
  401588:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000601e10 <__frame_dummy_init_array_entry>:
  601e10:	80 07 40             	add    BYTE PTR [rdi],0x40
  601e13:	00 00                	add    BYTE PTR [rax],al
  601e15:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000601e18 <__do_global_dtors_aux_fini_array_entry>:
  601e18:	60                   	(bad)  
  601e19:	07                   	(bad)  
  601e1a:	40 00 00             	add    BYTE PTR [rax],al
  601e1d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .jcr:

0000000000601e20 <__JCR_END__>:
	...

Disassembly of section .dynamic:

0000000000601e28 <_DYNAMIC>:
  601e28:	01 00                	add    DWORD PTR [rax],eax
  601e2a:	00 00                	add    BYTE PTR [rax],al
  601e2c:	00 00                	add    BYTE PTR [rax],al
  601e2e:	00 00                	add    BYTE PTR [rax],al
  601e30:	01 00                	add    DWORD PTR [rax],eax
  601e32:	00 00                	add    BYTE PTR [rax],al
  601e34:	00 00                	add    BYTE PTR [rax],al
  601e36:	00 00                	add    BYTE PTR [rax],al
  601e38:	0c 00                	or     al,0x0
  601e3a:	00 00                	add    BYTE PTR [rax],al
  601e3c:	00 00                	add    BYTE PTR [rax],al
  601e3e:	00 00                	add    BYTE PTR [rax],al
  601e40:	d0 05 40 00 00 00    	rol    BYTE PTR [rip+0x40],1        # 601e86 <_DYNAMIC+0x5e>
  601e46:	00 00                	add    BYTE PTR [rax],al
  601e48:	0d 00 00 00 00       	or     eax,0x0
  601e4d:	00 00                	add    BYTE PTR [rax],al
  601e4f:	00 e4                	add    ah,ah
  601e51:	11 40 00             	adc    DWORD PTR [rax+0x0],eax
  601e54:	00 00                	add    BYTE PTR [rax],al
  601e56:	00 00                	add    BYTE PTR [rax],al
  601e58:	19 00                	sbb    DWORD PTR [rax],eax
  601e5a:	00 00                	add    BYTE PTR [rax],al
  601e5c:	00 00                	add    BYTE PTR [rax],al
  601e5e:	00 00                	add    BYTE PTR [rax],al
  601e60:	10 1e                	adc    BYTE PTR [rsi],bl
  601e62:	60                   	(bad)  
  601e63:	00 00                	add    BYTE PTR [rax],al
  601e65:	00 00                	add    BYTE PTR [rax],al
  601e67:	00 1b                	add    BYTE PTR [rbx],bl
  601e69:	00 00                	add    BYTE PTR [rax],al
  601e6b:	00 00                	add    BYTE PTR [rax],al
  601e6d:	00 00                	add    BYTE PTR [rax],al
  601e6f:	00 08                	add    BYTE PTR [rax],cl
  601e71:	00 00                	add    BYTE PTR [rax],al
  601e73:	00 00                	add    BYTE PTR [rax],al
  601e75:	00 00                	add    BYTE PTR [rax],al
  601e77:	00 1a                	add    BYTE PTR [rdx],bl
  601e79:	00 00                	add    BYTE PTR [rax],al
  601e7b:	00 00                	add    BYTE PTR [rax],al
  601e7d:	00 00                	add    BYTE PTR [rax],al
  601e7f:	00 18                	add    BYTE PTR [rax],bl
  601e81:	1e                   	(bad)  
  601e82:	60                   	(bad)  
  601e83:	00 00                	add    BYTE PTR [rax],al
  601e85:	00 00                	add    BYTE PTR [rax],al
  601e87:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  601e8a:	00 00                	add    BYTE PTR [rax],al
  601e8c:	00 00                	add    BYTE PTR [rax],al
  601e8e:	00 00                	add    BYTE PTR [rax],al
  601e90:	08 00                	or     BYTE PTR [rax],al
  601e92:	00 00                	add    BYTE PTR [rax],al
  601e94:	00 00                	add    BYTE PTR [rax],al
  601e96:	00 00                	add    BYTE PTR [rax],al
  601e98:	f5                   	cmc    
  601e99:	fe                   	(bad)  
  601e9a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  601e9d:	00 00                	add    BYTE PTR [rax],al
  601e9f:	00 98 02 40 00 00    	add    BYTE PTR [rax+0x4002],bl
  601ea5:	00 00                	add    BYTE PTR [rax],al
  601ea7:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 601ead <_DYNAMIC+0x85>
  601ead:	00 00                	add    BYTE PTR [rax],al
  601eaf:	00 d8                	add    al,bl
  601eb1:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  601eb4:	00 00                	add    BYTE PTR [rax],al
  601eb6:	00 00                	add    BYTE PTR [rax],al
  601eb8:	06                   	(bad)  
  601eb9:	00 00                	add    BYTE PTR [rax],al
  601ebb:	00 00                	add    BYTE PTR [rax],al
  601ebd:	00 00                	add    BYTE PTR [rax],al
  601ebf:	00 b8 02 40 00 00    	add    BYTE PTR [rax+0x4002],bh
  601ec5:	00 00                	add    BYTE PTR [rax],al
  601ec7:	00 0a                	add    BYTE PTR [rdx],cl
  601ec9:	00 00                	add    BYTE PTR [rax],al
  601ecb:	00 00                	add    BYTE PTR [rax],al
  601ecd:	00 00                	add    BYTE PTR [rax],al
  601ecf:	00 98 00 00 00 00    	add    BYTE PTR [rax+0x0],bl
  601ed5:	00 00                	add    BYTE PTR [rax],al
  601ed7:	00 0b                	add    BYTE PTR [rbx],cl
  601ed9:	00 00                	add    BYTE PTR [rax],al
  601edb:	00 00                	add    BYTE PTR [rax],al
  601edd:	00 00                	add    BYTE PTR [rax],al
  601edf:	00 18                	add    BYTE PTR [rax],bl
  601ee1:	00 00                	add    BYTE PTR [rax],al
  601ee3:	00 00                	add    BYTE PTR [rax],al
  601ee5:	00 00                	add    BYTE PTR [rax],al
  601ee7:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 601eed <_DYNAMIC+0xc5>
	...
  601ef5:	00 00                	add    BYTE PTR [rax],al
  601ef7:	00 03                	add    BYTE PTR [rbx],al
	...
  601f01:	20 60 00             	and    BYTE PTR [rax+0x0],ah
  601f04:	00 00                	add    BYTE PTR [rax],al
  601f06:	00 00                	add    BYTE PTR [rax],al
  601f08:	02 00                	add    al,BYTE PTR [rax]
  601f0a:	00 00                	add    BYTE PTR [rax],al
  601f0c:	00 00                	add    BYTE PTR [rax],al
  601f0e:	00 00                	add    BYTE PTR [rax],al
  601f10:	f0 00 00             	lock add BYTE PTR [rax],al
  601f13:	00 00                	add    BYTE PTR [rax],al
  601f15:	00 00                	add    BYTE PTR [rax],al
  601f17:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  601f1a:	00 00                	add    BYTE PTR [rax],al
  601f1c:	00 00                	add    BYTE PTR [rax],al
  601f1e:	00 00                	add    BYTE PTR [rax],al
  601f20:	07                   	(bad)  
  601f21:	00 00                	add    BYTE PTR [rax],al
  601f23:	00 00                	add    BYTE PTR [rax],al
  601f25:	00 00                	add    BYTE PTR [rax],al
  601f27:	00 17                	add    BYTE PTR [rdi],dl
  601f29:	00 00                	add    BYTE PTR [rax],al
  601f2b:	00 00                	add    BYTE PTR [rax],al
  601f2d:	00 00                	add    BYTE PTR [rax],al
  601f2f:	00 e0                	add    al,ah
  601f31:	04 40                	add    al,0x40
  601f33:	00 00                	add    BYTE PTR [rax],al
  601f35:	00 00                	add    BYTE PTR [rax],al
  601f37:	00 07                	add    BYTE PTR [rdi],al
  601f39:	00 00                	add    BYTE PTR [rax],al
  601f3b:	00 00                	add    BYTE PTR [rax],al
  601f3d:	00 00                	add    BYTE PTR [rax],al
  601f3f:	00 c8                	add    al,cl
  601f41:	04 40                	add    al,0x40
  601f43:	00 00                	add    BYTE PTR [rax],al
  601f45:	00 00                	add    BYTE PTR [rax],al
  601f47:	00 08                	add    BYTE PTR [rax],cl
  601f49:	00 00                	add    BYTE PTR [rax],al
  601f4b:	00 00                	add    BYTE PTR [rax],al
  601f4d:	00 00                	add    BYTE PTR [rax],al
  601f4f:	00 18                	add    BYTE PTR [rax],bl
  601f51:	00 00                	add    BYTE PTR [rax],al
  601f53:	00 00                	add    BYTE PTR [rax],al
  601f55:	00 00                	add    BYTE PTR [rax],al
  601f57:	00 09                	add    BYTE PTR [rcx],cl
  601f59:	00 00                	add    BYTE PTR [rax],al
  601f5b:	00 00                	add    BYTE PTR [rax],al
  601f5d:	00 00                	add    BYTE PTR [rax],al
  601f5f:	00 18                	add    BYTE PTR [rax],bl
  601f61:	00 00                	add    BYTE PTR [rax],al
  601f63:	00 00                	add    BYTE PTR [rax],al
  601f65:	00 00                	add    BYTE PTR [rax],al
  601f67:	00 fe                	add    dh,bh
  601f69:	ff                   	(bad)  
  601f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  601f6d:	00 00                	add    BYTE PTR [rax],al
  601f6f:	00 88 04 40 00 00    	add    BYTE PTR [rax+0x4004],cl
  601f75:	00 00                	add    BYTE PTR [rax],al
  601f77:	00 ff                	add    bh,bh
  601f79:	ff                   	(bad)  
  601f7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  601f7d:	00 00                	add    BYTE PTR [rax],al
  601f7f:	00 01                	add    BYTE PTR [rcx],al
  601f81:	00 00                	add    BYTE PTR [rax],al
  601f83:	00 00                	add    BYTE PTR [rax],al
  601f85:	00 00                	add    BYTE PTR [rax],al
  601f87:	00 f0                	add    al,dh
  601f89:	ff                   	(bad)  
  601f8a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  601f8d:	00 00                	add    BYTE PTR [rax],al
  601f8f:	00 70 04             	add    BYTE PTR [rax+0x4],dh
  601f92:	40 00 00             	add    BYTE PTR [rax],al
	...

Disassembly of section .got:

0000000000601ff8 <.got>:
	...

Disassembly of section .got.plt:

0000000000602000 <_GLOBAL_OFFSET_TABLE_>:
  602000:	28 1e                	sub    BYTE PTR [rsi],bl
  602002:	60                   	(bad)  
	...
  602017:	00 06                	add    BYTE PTR [rsi],al
  602019:	06                   	(bad)  
  60201a:	40 00 00             	add    BYTE PTR [rax],al
  60201d:	00 00                	add    BYTE PTR [rax],al
  60201f:	00 16                	add    BYTE PTR [rsi],dl
  602021:	06                   	(bad)  
  602022:	40 00 00             	add    BYTE PTR [rax],al
  602025:	00 00                	add    BYTE PTR [rax],al
  602027:	00 26                	add    BYTE PTR [rsi],ah
  602029:	06                   	(bad)  
  60202a:	40 00 00             	add    BYTE PTR [rax],al
  60202d:	00 00                	add    BYTE PTR [rax],al
  60202f:	00 36                	add    BYTE PTR [rsi],dh
  602031:	06                   	(bad)  
  602032:	40 00 00             	add    BYTE PTR [rax],al
  602035:	00 00                	add    BYTE PTR [rax],al
  602037:	00 46 06             	add    BYTE PTR [rsi+0x6],al
  60203a:	40 00 00             	add    BYTE PTR [rax],al
  60203d:	00 00                	add    BYTE PTR [rax],al
  60203f:	00 56 06             	add    BYTE PTR [rsi+0x6],dl
  602042:	40 00 00             	add    BYTE PTR [rax],al
  602045:	00 00                	add    BYTE PTR [rax],al
  602047:	00 66 06             	add    BYTE PTR [rsi+0x6],ah
  60204a:	40 00 00             	add    BYTE PTR [rax],al
  60204d:	00 00                	add    BYTE PTR [rax],al
  60204f:	00 76 06             	add    BYTE PTR [rsi+0x6],dh
  602052:	40 00 00             	add    BYTE PTR [rax],al
  602055:	00 00                	add    BYTE PTR [rax],al
  602057:	00 86 06 40 00 00    	add    BYTE PTR [rsi+0x4006],al
  60205d:	00 00                	add    BYTE PTR [rax],al
  60205f:	00 96 06 40 00 00    	add    BYTE PTR [rsi+0x4006],dl
  602065:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000602068 <__data_start>:
	...

0000000000602070 <__dso_handle>:
	...

Disassembly of section .bss:

0000000000602078 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <_init-0x400558>
   a:	74 75                	je     81 <_init-0x40054f>
   c:	20 35 2e 34 2e 30    	and    BYTE PTR [rip+0x302e342e],dh        # 302e3440 <_end+0x2fce13c0>
  12:	2d 36 75 62 75       	sub    eax,0x75627536
  17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  18:	74 75                	je     8f <_init-0x400541>
  1a:	31 7e 31             	xor    DWORD PTR [rsi+0x31],edi
  1d:	36 2e 30 34 2e       	ss xor BYTE PTR cs:[rsi+rbp*1],dh
  22:	31 32                	xor    DWORD PTR [rdx],esi
  24:	29 20                	sub    DWORD PTR [rax],esp
  26:	35 2e 34 2e 30       	xor    eax,0x302e342e
  2b:	20 32                	and    BYTE PTR [rdx],dh
  2d:	30 31                	xor    BYTE PTR [rcx],dh
  2f:	36 30 36             	xor    BYTE PTR ss:[rsi],dh
  32:	30 39                	xor    BYTE PTR [rcx],bh
	...
